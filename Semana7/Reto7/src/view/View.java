/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import classes.*;
import controller.CasosController;
import controller.DepartamentoController;
import controller.MunicipioController;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import models.Departamento;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellStyle;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;


/**
 *
 * @author user
 */
public class View extends javax.swing.JFrame {

    DepartamentoController depController = new DepartamentoController();
    MunicipioController municipioController = new MunicipioController();
    CasosController casosController = new CasosController();
    
    LinkedList<clsReportByAge> ListaPorEdad = new LinkedList<>();
    LinkedList<clsReportByMunicipality> ListaPorMunicipio = new LinkedList<>();
    LinkedList<clsReportByDepartment> ListaPorDepartamento = new LinkedList<>();
    LinkedList<clsReportByTypeInfection> ListaPorEstadoActual = new LinkedList<>();
    
    
    private Departamento departamento = null;
    private ArrayList<Departamento> globalDepList = new ArrayList();
    
    public View() {
        initComponents();
        this.showPanelFrom();
        this.fillDepList();
        
        this.casosController = new CasosController();
        this.ListaPorEdad = casosController.listAge();
        this.ListaPorMunicipio = casosController.listMunicipality();
        this.ListaPorDepartamento = casosController.listDepartment();
        this.ListaPorEstadoActual = casosController.listTypeInfection();               

        this.generateReportAge();
        this.generateReportMunicipality();
        this.generateReportDepartment();
        this.generateReportTypeInfection();
    }
    
    private void showPanelFrom(){
        this.jPanel1.setVisible( departamento != null );
        
        if( departamento != null && departamento.getId() != null ){
            this.btnDelete.setVisible( true );
            this.depNombre.setText( departamento.getNombre() );
            this.depCodigo.setText( departamento.getCodigo().toString() );
        } else {
            this.btnDelete.setVisible( false );
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jp1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        departamentoList = new javax.swing.JList<>();
        btnNewDepartamento = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        depNombre = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        depCodigo = new javax.swing.JTextField();
        jpReportDepartment = new javax.swing.JPanel();
        buttonExport = new javax.swing.JButton();
        jpReportMunicipality = new javax.swing.JPanel();
        jpReportAge = new javax.swing.JPanel();
        jpReportTypeI = new javax.swing.JPanel();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Departamentos");

        departamentoList.setToolTipText("");
        departamentoList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                departamentoListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(departamentoList);

        btnNewDepartamento.setText("Nuevo Departamento");
        btnNewDepartamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewDepartamentoActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setText("Nombre");

        jLabel3.setText("Codigo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(depNombre)
            .addComponent(depCodigo)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(depNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(depCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel)
                    .addComponent(btnDelete))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewDepartamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnNewDepartamento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jp1.addTab("Departamentos", jPanel2);

        buttonExport.setText("Exportar");
        buttonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpReportDepartmentLayout = new javax.swing.GroupLayout(jpReportDepartment);
        jpReportDepartment.setLayout(jpReportDepartmentLayout);
        jpReportDepartmentLayout.setHorizontalGroup(
            jpReportDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpReportDepartmentLayout.createSequentialGroup()
                .addContainerGap(466, Short.MAX_VALUE)
                .addComponent(buttonExport)
                .addContainerGap())
        );
        jpReportDepartmentLayout.setVerticalGroup(
            jpReportDepartmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpReportDepartmentLayout.createSequentialGroup()
                .addGap(0, 343, Short.MAX_VALUE)
                .addComponent(buttonExport))
        );

        jp1.addTab("Reporte Departamento", jpReportDepartment);

        javax.swing.GroupLayout jpReportMunicipalityLayout = new javax.swing.GroupLayout(jpReportMunicipality);
        jpReportMunicipality.setLayout(jpReportMunicipalityLayout);
        jpReportMunicipalityLayout.setHorizontalGroup(
            jpReportMunicipalityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );
        jpReportMunicipalityLayout.setVerticalGroup(
            jpReportMunicipalityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
        );

        jp1.addTab("Reporte Municipio", jpReportMunicipality);

        javax.swing.GroupLayout jpReportAgeLayout = new javax.swing.GroupLayout(jpReportAge);
        jpReportAge.setLayout(jpReportAgeLayout);
        jpReportAgeLayout.setHorizontalGroup(
            jpReportAgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );
        jpReportAgeLayout.setVerticalGroup(
            jpReportAgeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
        );

        jp1.addTab("Reporte Por Edad", jpReportAge);

        javax.swing.GroupLayout jpReportTypeILayout = new javax.swing.GroupLayout(jpReportTypeI);
        jpReportTypeI.setLayout(jpReportTypeILayout);
        jpReportTypeILayout.setHorizontalGroup(
            jpReportTypeILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );
        jpReportTypeILayout.setVerticalGroup(
            jpReportTypeILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 366, Short.MAX_VALUE)
        );

        jp1.addTab("Reporte Tipo Contagio", jpReportTypeI);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jp1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jp1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        Integer id = this.departamento.getId();
        this.depController.deleteDepartamento(id);
        this.btnCancelActionPerformed(evt);
        this.fillDepList();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String nombre = this.depNombre.getText();
        String strCode = this.depCodigo.getText();
        try{
            depController.saveDepartamento(this.departamento.getId(), nombre, strCode);
            JOptionPane.showMessageDialog(this, "Se guardo correctamente.");
            this.limpiarDepForm();
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage() );
        }        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.limpiarDepForm();
        this.departamento = null;
        this.showPanelFrom();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnNewDepartamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewDepartamentoActionPerformed
        this.departamento = new Departamento();
        this.showPanelFrom();
    }//GEN-LAST:event_btnNewDepartamentoActionPerformed

    private void departamentoListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_departamentoListMouseClicked
        JList target = (JList) evt.getSource();
        int index = target.locationToIndex( evt.getPoint() );
        this.departamento = this.globalDepList.get(index);
        this.showPanelFrom();
    }//GEN-LAST:event_departamentoListMouseClicked

    private void buttonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExportActionPerformed
        // TODO add your handling code here:
        //buttonExport
        HSSFWorkbook book = new HSSFWorkbook();
        HSSFSheet sheet = book.createSheet();
        book.setSheetName(0, "Departamentos");
        
        String[] headers = new String[]{
            "nameDepartment",
            "amountCasesDepartment"
        };
        
        CellStyle headerCellStyle = book.createCellStyle();
        HSSFFont font = book.createFont();
        font.setBold(true);
        headerCellStyle.setFont(font);
        
        HSSFRow headersRow = sheet.createRow(0);
        for(int i=0; i<headers.length; i++){
            String header = headers[i];
            HSSFCell cell = headersRow.createCell(i);
            cell.setCellStyle(headerCellStyle);
            cell.setCellValue(header); 
        }
        
        for(int i=0; i<ListaPorDepartamento.size(); i++){
            HSSFRow row = sheet.createRow(i+1);
            String name = ListaPorDepartamento.get(i).getNameDepartment();
            int amount = ListaPorDepartamento.get(i).getAmountCasesDepartment();
            row.createCell(0).setCellValue(name);
            row.createCell(1).setCellValue(amount);            
        }
        
        FileOutputStream file;
        try {
            file = new FileOutputStream("report_department.xls");
            book.write(file);
            file.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_buttonExportActionPerformed

    public void limpiarDepForm(){
        this.depNombre.setText("");
        this.depCodigo.setText("");
        this.fillDepList();
    }
    
    public void fillDepList(){
        this.globalDepList = this.depController.getDepartamentoList();
        DefaultListModel model = new DefaultListModel();
        
        int count = 0;
        for(Departamento dep : this.globalDepList){
            model.add(count, dep.getCodigo() + ". " + dep.getNombre() );
            count++;
        }
        
        this.departamentoList.setModel( model );
    }
    
    private void generateReportAge(){
        LinkedList<clsReportByAge> report = casosController.listAge();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        report.forEach(reportAge -> {
            dataset.addValue(reportAge.getAmountCasesByAge(), "casos", reportAge.getAge().toString());
        });
        
        JFreeChart chart = ChartFactory.createLineChart("Casos Covid","Edad","Total de casos",dataset,PlotOrientation.VERTICAL,true,true,false);
        ChartPanel panel = new ChartPanel(chart);
        panel.setMouseWheelEnabled(true);
        jpReportAge.setLayout(new java.awt.BorderLayout());
        jpReportAge.add(panel,BorderLayout.CENTER);
        jpReportAge.validate();
        
    }
    
    
    private void generateReportMunicipality(){
        LinkedList<clsReportByMunicipality> report = casosController.listMunicipality();
        DefaultPieDataset dataset = new DefaultPieDataset();
        for (clsReportByMunicipality reportMunicipality : report) {
            dataset.setValue(reportMunicipality.getNameMunicipality(), reportMunicipality.getAmountCasesMunicipality());
            
        }
        JFreeChart chartmunicipio = ChartFactory.createPieChart("casos covid por municipio", dataset);
        ChartPanel panel = new ChartPanel(chartmunicipio);
        panel.setMouseWheelEnabled(true);
        jpReportMunicipality.setLayout(new java.awt.BorderLayout());
        jpReportMunicipality.add(panel,BorderLayout.CENTER);
        jpReportMunicipality.validate();
                
    }
    
    private void generateReportDepartment(){
        LinkedList<clsReportByDepartment> report = casosController.listDepartment();
        DefaultPieDataset dataset = new DefaultPieDataset();
        for (clsReportByDepartment reportDepartment : report) {
            dataset.setValue(reportDepartment.getNameDepartment(), reportDepartment.getAmountCasesDepartment());
            
        }
        JFreeChart chartdepartamento = ChartFactory.createPieChart("casos covid por departamento", dataset);
        ChartPanel panel = new ChartPanel(chartdepartamento);
        panel.setMouseWheelEnabled(true);
        jpReportDepartment.setLayout(new java.awt.BorderLayout());
        jpReportDepartment.add(panel,BorderLayout.CENTER);
        jpReportDepartment.validate();
                
    }
    
    private void generateReportTypeInfection(){
        LinkedList<clsReportByTypeInfection> report = casosController.listTypeInfection();
        DefaultPieDataset dataset = new DefaultPieDataset();
        report.forEach(reportTypeInfection -> {
            dataset.setValue(reportTypeInfection.getTypeInfection(), reportTypeInfection.getAmountTypeInfection());
        });
        JFreeChart chart = ChartFactory.createPieChart("Tipo de contacto Covid ", dataset);
        ChartPanel panel = new ChartPanel(chart);
        panel.setMouseWheelEnabled(true);
        jpReportTypeI.setLayout(new java.awt.BorderLayout());
        jpReportTypeI.add(panel,BorderLayout.CENTER);
        jpReportTypeI.validate();
                
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNewDepartamento;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton buttonExport;
    private javax.swing.JTextField depCodigo;
    private javax.swing.JTextField depNombre;
    private javax.swing.JList<String> departamentoList;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jp1;
    private javax.swing.JPanel jpReportAge;
    private javax.swing.JPanel jpReportDepartment;
    private javax.swing.JPanel jpReportMunicipality;
    private javax.swing.JPanel jpReportTypeI;
    // End of variables declaration//GEN-END:variables
}
